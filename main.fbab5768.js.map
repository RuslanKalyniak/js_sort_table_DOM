{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","addEventListener","e","target","tagName","salaryConvert","input","replace","list","rowsArray","rows","sort","current","next","targetIndex","cellIndex","currentConverted","children","textContent","nextConverted","Number","isNaN","localeCompare","append"],"mappings":";AAAA,aAIA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAFA,IAAMA,EAAQC,SAASC,cAAc,SAErCF,EAAMG,iBAAiB,QAAS,SAAAC,GAC1BA,GAAqB,OAArBA,EAAEC,OAAOC,QAATF,CAIEG,IAAAA,EAAgB,SAACC,GACdA,OAAAA,EAAMC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KAGvCC,EAAOV,EAAME,cAAc,SAE3BS,EAAY,EAAID,EAAKE,MAAMC,KAAK,SAACC,EAASC,GACxCC,IAAAA,EAAcZ,EAAEC,OAAOY,UACvBC,EAAmBX,EACvBO,EAAQK,SAASH,GAAaI,aAE1BC,EAAgBd,EACpBQ,EAAKI,SAASH,GAAaI,aAGxBE,OAAAA,OAAOC,OAAOL,GACVA,EAAiBM,cAAcH,GAGjCH,EAAmBG,IAG5BX,EAAKe,OAALf,MAAAA,EAAeC,EAAAA","file":"main.fbab5768.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\n\ntable.addEventListener('click', e => {\n  if (e.target.tagName !== 'TH') {\n    return;\n  }\n\n  const salaryConvert = (input) => {\n    return input.replace('$', '').replace(',', '');\n  };\n\n  const list = table.querySelector('tbody');\n\n  const rowsArray = [...list.rows].sort((current, next) => {\n    const targetIndex = e.target.cellIndex;\n    const currentConverted = salaryConvert(\n      current.children[targetIndex].textContent\n    );\n    const nextConverted = salaryConvert(\n      next.children[targetIndex].textContent\n    );\n\n    if ((Number.isNaN(+currentConverted))) {\n      return currentConverted.localeCompare(nextConverted);\n    }\n\n    return currentConverted - nextConverted;\n  });\n\n  list.append(...rowsArray);\n});\n"]}